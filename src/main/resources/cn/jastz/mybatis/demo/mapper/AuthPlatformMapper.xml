<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jastz.mybatis.demo.dao.AuthPlatformMapper">
    <resultMap id="BaseResultMap" type="cn.jastz.mybatis.demo.entity.AuthPlatform">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="business_id" jdbcType="INTEGER" property="businessId"/>
        <result column="enable" jdbcType="TINYINT" property="enable"/>
        <result column="del_status" jdbcType="TINYINT" property="delStatus"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>
    <resultMap id="platformBusinessResultMap" type="cn.jastz.mybatis.demo.entity.AuthPlatform"
               extends="BaseResultMap">
        <association property="authBusiness" javaType="cn.jastz.mybatis.demo.entity.AuthBusiness">
            <id property="id" column="business_id"/>
            <result property="name" column="business_name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_platform
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.jastz.mybatis.demo.entity.AuthPlatform">
    insert into auth_platform (id, name, code, 
      url, business_id, enable, 
      del_status, created_time, updated_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, #{enable,jdbcType=TINYINT}, 
      #{delStatus,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.jastz.mybatis.demo.entity.AuthPlatform">
    update auth_platform
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=INTEGER},
      enable = #{enable,jdbcType=TINYINT},
      del_status = #{delStatus,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, code, url, business_id, enable, del_status, created_time, updated_time
    from auth_platform
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, code, url, business_id, enable, del_status, created_time, updated_time
    from auth_platform
  </select>
    <select id="queryPage" resultMap="platformBusinessResultMap"
            parameterType="cn.jastz.page.domain.PageRequest">
      select a.id, a.name, a.code, a.url, a.business_id, a.enable, a.del_status, a.created_time, a.updated_time,
      b.name as business_name
      from auth_platform a
      left join auth_business b on b.id = a.business_id
    </select>
</mapper>